{"version":3,"file":"prefixLoader.js","sources":["../../../../src/config/loaders/prefixLoader.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\n\nimport { LoaderThis } from './types';\n\ntype LoaderOptions = {\n  distDir: string;\n};\n\n/**\n * Inject templated code into the beginning of a module.\n */\nexport default function prefixLoader(this: LoaderThis<LoaderOptions>, userCode: string): string {\n  // We know one or the other will be defined, depending on the version of webpack being used\n  const { distDir } = 'getOptions' in this ? this.getOptions() : this.query;\n\n  const templatePath = path.resolve(__dirname, '../templates/prefixLoaderTemplate.js');\n  // make sure the template is included when runing `webpack watch`\n  this.addDependency(templatePath);\n\n  // Fill in the placeholder\n  let templateCode = fs.readFileSync(templatePath).toString();\n  templateCode = templateCode.replace('__DIST_DIR__', distDir);\n\n  return `${templateCode}\\n${userCode}`;\n}\n"],"names":[],"mappings":";;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}