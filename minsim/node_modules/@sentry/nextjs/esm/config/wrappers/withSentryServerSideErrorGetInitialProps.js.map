{"version":3,"file":"withSentryServerSideErrorGetInitialProps.js","sources":["../../../../src/config/wrappers/withSentryServerSideErrorGetInitialProps.ts"],"sourcesContent":["import { hasTracingEnabled } from '@sentry/tracing';\nimport { serializeBaggage } from '@sentry/utils';\nimport { NextPageContext } from 'next';\nimport { ErrorProps } from 'next/error';\n\nimport { isBuild } from '../../utils/isBuild';\nimport { callTracedServerSideDataFetcher, getTransactionFromRequest, withErrorInstrumentation } from './wrapperUtils';\n\ntype ErrorGetInitialProps = (context: NextPageContext) => Promise<ErrorProps>;\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom error page (\"_error.js\").\n *\n * @param origErrorGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nexport function withSentryServerSideErrorGetInitialProps(\n  origErrorGetInitialProps: ErrorGetInitialProps,\n): ErrorGetInitialProps {\n  return async function (\n    ...errorGetInitialPropsArguments: Parameters<ErrorGetInitialProps>\n  ): ReturnType<ErrorGetInitialProps> {\n    if (isBuild()) {\n      return origErrorGetInitialProps(...errorGetInitialPropsArguments);\n    }\n\n    const [context] = errorGetInitialPropsArguments;\n    const { req, res } = context;\n\n    const errorWrappedGetInitialProps = withErrorInstrumentation(origErrorGetInitialProps);\n\n    if (hasTracingEnabled()) {\n      // Since this wrapper is only applied to `getInitialProps` running on the server, we can assert that `req` and\n      // `res` are always defined: https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      const errorGetInitialProps: ErrorProps & {\n        _sentryTraceData?: string;\n        _sentryBaggage?: string;\n      } = await callTracedServerSideDataFetcher(\n        errorWrappedGetInitialProps,\n        errorGetInitialPropsArguments,\n        req!,\n        res!,\n        {\n          dataFetcherRouteName: '/_error',\n          requestedRouteName: context.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        },\n      );\n\n      const requestTransaction = getTransactionFromRequest(req!);\n      if (requestTransaction) {\n        errorGetInitialProps._sentryTraceData = requestTransaction.toTraceparent();\n        errorGetInitialProps._sentryBaggage = serializeBaggage(requestTransaction.getBaggage());\n      }\n\n      return errorGetInitialProps;\n    } else {\n      return errorWrappedGetInitialProps(...errorGetInitialPropsArguments);\n    }\n  };\n}\n"],"names":[],"mappings":";;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}