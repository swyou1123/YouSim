{"version":3,"file":"withSentryGetStaticProps.js","sources":["../../../../src/config/wrappers/withSentryGetStaticProps.ts"],"sourcesContent":["import { GetStaticProps } from 'next';\n\nimport { isBuild } from '../../utils/isBuild';\nimport { callDataFetcherTraced, withErrorInstrumentation } from './wrapperUtils';\n\ntype Props = { [key: string]: unknown };\n\n/**\n * Create a wrapped version of the user's exported `getStaticProps` function\n *\n * @param origGetStaticProps The user's `getStaticProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nexport function withSentryGetStaticProps(\n  origGetStaticProps: GetStaticProps<Props>,\n  parameterizedRoute: string,\n): GetStaticProps<Props> {\n  return async function (\n    ...getStaticPropsArguments: Parameters<GetStaticProps<Props>>\n  ): ReturnType<GetStaticProps<Props>> {\n    if (isBuild()) {\n      return origGetStaticProps(...getStaticPropsArguments);\n    }\n\n    const errorWrappedGetStaticProps = withErrorInstrumentation(origGetStaticProps);\n\n    return callDataFetcherTraced(errorWrappedGetStaticProps, getStaticPropsArguments, {\n      parameterizedRoute,\n      dataFetchingMethodName: 'getStaticProps',\n    });\n  };\n}\n"],"names":[],"mappings":";;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}