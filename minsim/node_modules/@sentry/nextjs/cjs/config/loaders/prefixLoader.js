var {
  _interopNamespace
} = require('@sentry/utils/cjs/buildPolyfills');

Object.defineProperty(exports, '__esModule', { value: true });

var fs = require('fs');
var path = require('path');

var fs__namespace = /*#__PURE__*/_interopNamespace(fs);
var path__namespace = /*#__PURE__*/_interopNamespace(path);

/**
 * Inject templated code into the beginning of a module.
 */
function prefixLoader( userCode) {
  // We know one or the other will be defined, depending on the version of webpack being used
  const { distDir } = 'getOptions' in this ? this.getOptions() : this.query;

  var templatePath = path__namespace.resolve(__dirname, '../templates/prefixLoaderTemplate.js');
  // make sure the template is included when runing `webpack watch`
  this.addDependency(templatePath);

  // Fill in the placeholder
  let templateCode = fs__namespace.readFileSync(templatePath).toString();
  templateCode = templateCode.replace('__DIST_DIR__', distDir);

  return `${templateCode}\n${userCode}`;
}

exports.default = prefixLoader;
//# sourceMappingURL=prefixLoader.js.map
